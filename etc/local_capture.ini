[default]
wiseURL=http://127.0.0.1:8081


#prefix=dta
#arkimeWebURL=http://localhost:8005/
footerTemplate=DTA ü¶â | <a href="https://github.com/alpinebuster/arkime-docker-compose">alpinebuster</a> üèÇ | _responseTime_ ‚è±Ô∏è
authMode=basic+form
# NOTE
authCookieSecure=false
authTrustProxy=true
disableUserPasswordUI=false
#userAuthIps=::,0.0.0.0/0
esAdminUsers=arkime,dta_admin

bpf=
# Semicolon separated list of parsers to NOT load. Add disableParsers= in config file to load all parsers.
disableParsers=
# (Since 6.0.0) When true disable the embedded python support. See Python for more information.
disablePython=false
ja3Strings=false
ja4Raw=true
readTruncatedPackets=true


# Comma separated list of OpenSearch/Elasticsearch host:port combinations. If not using a
# Elasticsearch load balancer, a different OpenSearch/Elasticsearch node in the cluster can be
# specified for each Arkime node to help spread load on high volume clusters. For user/password
# use https://user:pass@host:port OR elasticsearchBasicAuth
elasticsearch=ARKIME_ELASTICSEARCH
# elasticsearchBasicAuth=

# Where the user database is, the above is used if not set
# For user/password use https://user:pass@host:port OR usersElasticsearchBasicAuth
# usersElasticsearch=ARKIME_ELASTICSEARCH
# usersElasticsearchBasicAuth=
passwordSecret=ARKIME_PASSWORD

# Use a different password for S2S communication then passwordSecret.
# Must be in default section. Make this RANDOM, you never need to type in
#serverSecret=

# HTTP Digest Realm - Must be in default section. Changing the value
# will make all previously stored passwords no longer work
httpRealm=Arkime

# The directory to save raw pcap files to
pcapDir=/opt/arkime/raw

# The max raw pcap file size in gigabytes, with a max value of 36G.
# The disk should have room for at least 10*maxFileSizeG
maxFileSizeG=12

# The max time in minutes between rotating pcap files. Default is 0, which means
# only rotate based on current file size and the maxFileSizeG variable
#maxFileTimeM=60

# TCP timeout value. Arkime writes a session record after this many seconds
# of inactivity.
tcpTimeout=600

# Arkime writes a session record after this many seconds, no matter if
# active or inactive
tcpSaveTimeout=720

# UDP timeout value. Arkime assumes the UDP session is ended after this
# many seconds of inactivity.
udpTimeout=30

# ICMP timeout value. Arkime assumes the ICMP session is ended after this
# many seconds of inactivity.
icmpTimeout=10

# An approximate maximum number of active sessions Arkime will try and monitor
maxStreams=1000000

# Arkime writes a session record after this many packets
maxPackets=10000

# Delete pcap files when free space is lower then this in gigabytes OR it can be
# expressed as a percentage (ex: 5%). This does NOT delete the session records in
# the database. It is recommended this value is between 5% and 10% of the disk.
# Database deletes are done by the db.pl expire script
freeSpaceG=5%

# A MaxMind account is now required, Arkime checks several install locations, or
# will work without Geo files installed. See https://arkime.com/faq#maxmind
geoLite2Country=/opt/arkime/etc/GeoLite2-Country.mmdb
geoLite2ASN=/opt/arkime/etc/GeoLite2-ASN.mmdb

# Path of the rir assignments file
#  https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.csv
rirFile=/opt/arkime/etc/ipv4-address-space.csv

# Path of the OUI file from whareshark
#  https://raw.githubusercontent.com/wireshark/wireshark/release-4.0/manuf
ouiFile=/opt/arkime/etc/oui.txt

# Arkime rules to allow you specify actions to perform when criteria are met with certain fields or state.
# See https://arkime.com/rulesformat
#rulesFiles=ARKIME_INSTALL_DIR/etc/arkime.rules

# User to drop privileges to. The pcapDir must be writable by this user or group below
dropUser=nobody
# Group to drop privileges to. The pcapDir must be writable by this group or user above
dropGroup=daemon

# Should we parse extra smtp traffic info
parseSMTP=true
# Should we parse extra smb traffic info
parseSMB=true
# Should we parse HTTP QS Values
parseQSValue=false

parsersDir=/opt/arkime/parsers
pluginsDir=/opt/arkime/plugins
plugins=
# REF: https://arkime.com/faq#how-do-i-import-existing-pcaps
# `/opt/arkime/bin/capture --flush --host localhost --copy -n dta-capture -r /opt/arkime/raw/t3.pcap -c /opt/arkime/etc/local_capture.ini -t t3 --debug`
uploadCommand=/opt/arkime/bin/capture --flush --host localhost --copy -n {NODE} -r {TMPFILE} -c /opt/arkime/etc/local_capture.ini {TAGS} --debug
uploadRoles=arkimeUser,arkimeAdmin,arkimeAdmin,superAdmin
